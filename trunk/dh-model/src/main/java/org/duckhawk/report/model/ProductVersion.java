/*
 *    DuckHawk provides a Performance Testing framework for load
 *    testing applications and web services in an automated and
 *    continuous fashion.
 * 
 *    http://docs.codehaus.org/display/DH/Home
 * 
 *    Copyright (C) 2008 TOPP - http://www.openplans.org.
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */

package org.duckhawk.report.model;

/**
 * Marks the version of a product (a release number, a branch).
 * @author   Andrea Aime - TOPP
 */
public class ProductVersion {
    /**
     * @uml.property  name="id"
     */
    long id;

    Product product;

    /**
     * @uml.property  name="version"
     */
    String version;

    protected ProductVersion() {
    };

    public ProductVersion(Product product, String version) {
        super();
        this.product = product;
        this.version = version;
    }

    /**
     * @return
     * @uml.property  name="id"
     */
    public long getId() {
        return id;
    }

    /**
     * @param id
     * @uml.property  name="id"
     */
    public void setId(long id) {
        this.id = id;
    }

    /**
     * @return
     * @uml.property  name="product"
     */
    public Product getProduct() {
        return product;
    }

    /**
     * @param product
     * @uml.property  name="product"
     */
    public void setProduct(Product product) {
        this.product = product;
    }

    /**
     * @return
     * @uml.property  name="version"
     */
    public String getVersion() {
        return version;
    }

    /**
     * @param version
     * @uml.property  name="version"
     */
    public void setVersion(String version) {
        this.version = version;
    }

    @Override
    // generated by eclipse
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + (int) (id ^ (id >>> 32));
        result = prime * result + ((product == null) ? 0 : product.hashCode());
        result = prime * result + ((version == null) ? 0 : version.hashCode());
        return result;
    }

    @Override
    // generated by eclipse
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProductVersion other = (ProductVersion) obj;
        if (id != other.id)
            return false;
        if (product == null) {
            if (other.product != null)
                return false;
        } else if (!product.equals(other.product))
            return false;
        if (version == null) {
            if (other.version != null)
                return false;
        } else if (!version.equals(other.version))
            return false;
        return true;
    }
}
