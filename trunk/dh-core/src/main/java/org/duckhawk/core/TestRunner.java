package org.duckhawk.core;

/**
 * Executes the test provided by the {@link TestExecutorFactory} and notifies
 * the attached listeners or the results.
 * 
 * @author Andrea Aime (TOPP)
 * 
 */
public interface TestRunner {

    /**
     * Runs the {@link TestExecutor} instances generated by the
     * {@link TestExecutorFactory} (might be just one executor and one call, or
     * multiple executors and multiple calls per executor, depending on the
     * nature of the runner)
     * 
     * @param factory
     */
    public void runTests(TestExecutorFactory factory);
    
    /**
     * Disposes of the runner. This in particular removes all listeners avoiding
     * issues with possible circular dependencies between the listeners and the
     * test runners.
     */
    public void dispose();
    
    /**
     * Forcefully stops the current test run
     */
    public void cancel();

    /**
     * Adds a test listener
     * 
     * @param listener
     */
    public void addTestRunListener(TestListener listener);

    /**
     * Removes a test listener
     * 
     * @param listener
     */
    public void removeTestRunListener(TestListener listener);
}
